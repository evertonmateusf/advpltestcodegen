#Include 'Protheus.ch'

CLASS ${prefix}${className}TestCase FROM FWDefaultTestCase
	
	METHOD ${prefix}${className}TestCase()
	METHOD SetUpClass()
	METHOD TearDownClass()
	METHOD getSingle_001()
	METHOD getCollection_002()
	METHOD insert_003()
	METHOD update_004()
	METHOD delete_005()
	METHOD error_006()

ENDCLASS

METHOD ${prefix}${className}TestCase() CLASS ${prefix}${className}TestCase
	_Super:FWDefaultTestCase()
	self:AddTestMethod( "GETSINGLE_001",,"Busca um registro na tabela ${entity}." )
	self:AddTestMethod( "GETCOLLECTION_002",,"Busca uma coleção de registros na tabela ${entity}." )
	self:AddTestMethod( "INSERT_003",,"Insere um registro na tabela ${entity}." )
	self:AddTestMethod( "UPDATE_004",,"Altera um registro na tabela ${entity}." )
	self:AddTestMethod( "DELETE_005",,"Deleta um registro na tabela ${entity}." )
	self:AddTestMethod( "ERROR_006",,"Testa o registro de um erro." )
Return

METHOD SetUpClass() CLASS ${prefix}${className}TestCase
Return _Super:SetUpClass()

METHOD TearDownClass() CLASS ${prefix}${className}TestCase
	Local oResult := FWTestHelper():New()

    oResult:UTRestParam(oResult:aParam)
	DelClassIntf()
	
Return oResult

//Test Single Src
METHOD getSingle_001() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()
	Local aHeader   := {"Content-Type: application/json"}
    Local cRet      := ""
    Local oJson := JsonObject():New()

${keyVariables}
${noKeyVariables}
	oResult:activate()
	oResult:UTSetAPI("/healthcare/v1/trimesterBalanceSheet/"+${keyCollumn}+;
					"?page=1"+;
${queryParams}
                    "&order=${order}";
                    ,"REST")

	cRet := oResult:UTGetWS(aHeader)
    oResult:AssertFalse(Empty(cRet), "Não houve retorno para a requisição")

	If !Empty(cRet)

        oJson:fromJson(cRet)

${compare}
	EndIf

	oResult:AssertTrue( oResult:lOk, "" )
	oResult:deactivate()

Return oResult

//Test All Src
METHOD getCollection_002() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()
	Local aHeader   := {"Content-Type: application/json"}
    Local cRet      := ""
    Local oJson := JsonObject():New()

${keyVariables}
${noKeyVariables}
	oResult:activate()
	oResult:UTSetAPI("/healthcare/v1/trimesterBalanceSheet"+;
					"?page=1"+;
					"&pageSize=2"+;
                    "&order=${order}";
                    ,"REST")
					
	cRet := oResult:UTGetWS(aHeader)
    oResult:AssertFalse(Empty(cRet), "Não houve retorno para a requisição")

	If !Empty(cRet)

        oJson:fromJson(cRet)

${compareAll}
	EndIf

	oResult:AssertTrue( oResult:lOk, "" )
	oResult:deactivate()

Return oResult

//Test Insert
METHOD insert_003() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()

${keyVariables}
${noKeyVariables}
    Local aHeader   := {"Content-Type: application/json"}
    Local cRet      := ""
    Local oJson := JsonObject():New()
	Local cBody := '{ ' +;
${body}
		            '}'
	oResult:activate()
    oResult:UTSetAPI("/healthcare/v1/trimesterBalanceSheet";
                    ,"REST")
	cRet := oResult:UTPostWS(cBody,aHeader)
    oResult:AssertFalse(Empty(cRet), "Não houve retorno para a requisição. Verifique se o serviço está no ar.")

	If !Empty(cRet)

        oJson:fromJson(cRet)
		
${compare}
	EndIf

	oResult:deactivate()

Return oResult

//Test Update
METHOD update_004() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()

${keyVariables}
${noKeyVariables}
    Local aHeader   := {"Content-Type: application/json"}
    Local cRet      := ""
    Local oJson := JsonObject():New()
    Local cBody := '{ ' +;
${body}
		            '}'
	oResult:activate()
	
	oResult:UTSetAPI("/healthcare/v1/trimesterBalanceSheet/"+${keyCollumn}+;
					"?page=1"+;
${queryParams}
                    "&pageSize=2";
					,"REST")
	
	cRet := oResult:UTPutWS(cBody,aHeader)
    oResult:AssertFalse(Empty(cRet), "Não houve retorno para a requisição. Verifique se o serviço está no ar.")

	If !Empty(cRet)

        oJson:fromJson(cRet)
		
${compare}
	EndIf

	oResult:deactivate()

Return oResult

//Test Delete
METHOD delete_005() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()

${keyVariables}	
    Local aHeader   := {"Content-Type: application/json"}
    Local cRet      := ""
    Local oJson := JsonObject():New()
    Local cBody     := ""

	oResult:activate()
	
	oResult:UTSetAPI("/healthcare/v1/trimesterBalanceSheet/"+${keyCollumn}+;
					"?page=1"+;
${queryParams}
                    "&pageSize=2";
					,"REST")
	
	cRet := oResult:UTDeleteWS(cBody,aHeader)

	oResult:AssertFalse(Empty(cRet), "Não houve retorno para a requisição. Verifique se o serviço está no ar.")
    oResult:AssertTrue(cRet=="204 NoContent", "Retorno diferente de '204 NoContent'. Retorno " + cRet)

	oResult:deactivate()

Return oResult

//Test Erro
METHOD error_006() CLASS ${prefix}${className}TestCase

	Local oResult := FWTestHelper():New()
	Local oCollection := ${prefix}Clt${className}():New()
    Local cMsg := "Erro caso de teste"

    oCollection:setError(cMsg)
	oResult:activate()
	oResult:AssertTrue(oCollection:getError() == cMsg, "Não retornou a mensagem de erro esperada.")
	
	oCollection:destroy()
	oResult:deactivate()

Return oResult